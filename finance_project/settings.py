"""
Django settings for finance_project project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import dj_database_url
from decouple import config  
from pathlib import Path
from datetime import timedelta
from celery.schedules import crontab
import environ
env = environ.Env()
environ.Env.read_env()
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialize environment variables
env = environ.Env(
    DEBUG=(bool, False)  # default value if not set
)
# EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS", default=True)

# Load .env file **only in local development**
env_file = os.path.join(BASE_DIR, ".env")
if os.path.exists(env_file):
    environ.Env.read_env(env_file)

# Security settings
SECRET_KEY = env("SECRET_KEY")
DEBUG = env.bool("DEBUG")

ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'finance-backend.up.railway.app']

# Static files
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
     "rest_framework","django_filters","corsheaders",
    "core",
 # Django REST Framework
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # Keep at top
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Recommended here
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



CORS_ALLOWED_ORIGINS = [
    "https://finance-backend.up.railway.app",
    "https://finance-frontend-production-a0b9.up.railway.app",
]

CSRF_TRUSTED_ORIGINS = [
    "https://finance-frontend-production-a0b9.up.railway.app",
]


CORS_ALLOW_CREDENTIALS = True


# settings.py
ALLOWED_CURRENCIES = ["USD", "SOS"]  # Ku dar currencies aad rabto



WSGI_APPLICATION = "finance_project.wsgi.application"
ASGI_APPLICATION = "finance_project.asgi.application"

ROOT_URLCONF = 'finance_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'finance_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
if DEBUG:
    DATABASES = {
        "default": dj_database_url.config(
            default="postgresql://finance:Raaxo9318@localhost:5432/finance",
            conn_max_age=600,
        )
    }
else:
    DATABASES = {
        "default": dj_database_url.config(
            default="postgresql://postgres:qTIcJmtAkQihcmQeXdnHzrQpPJioaYCo@yamanote.proxy.rlwy.net:28120/railway",
            conn_max_age=600,
        )
    }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'finance',
#         'USER': 'finance',
#         'PASSWORD': 'Raaxo9318',
#         'HOST': 'localhost',
#         'PORT': 5432,
#     }
# }


AUTH_USER_MODEL = "core.User"

REST_FRAMEWORK = {
  "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],
  "DEFAULT_AUTHENTICATION_CLASSES": ["rest_framework_simplejwt.authentication.JWTAuthentication"],
  "DEFAULT_FILTER_BACKENDS": [
      "django_filters.rest_framework.DjangoFilterBackend",
      "rest_framework.filters.SearchFilter",
      "rest_framework.filters.OrderingFilter",
  ],
  "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
  "PAGE_SIZE": 20,
}







# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# STATIC_URL = 'static/'

# Static files (CSS, JavaScript, Images)
# STATIC_URL = "/static/"



MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SIMPLE_JWT = {
  "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
  "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
}

STATIC_URL = "/static/"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Celery Broker & Backend
# CELERY_BROKER_URL = "redis://localhost:6379/0" 
# CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
# CELERY_TIMEZONE = "Africa/Mogadishu"
CELERY_BROKER_URL = config("CELERY_BROKER_URL")
CELERY_RESULT_BACKEND = config("CELERY_RESULT_BACKEND")
CELERY_TIMEZONE = config("CELERY_TIMEZONE", default="Africa/Mogadishu")

# Celery Beat Schedule (dhammaan jadwalka hal meel)
CELERY_BEAT_SCHEDULE = {
    # "check-daily-notifications": {
    #     "task": "core.utils.notifications.check_budget_notifications",  # ← CORRECT PATH
    #     "schedule": crontab(hour=9, minute=0),  # Only at 9:00 AM
    # },
    # ... keep the rest the same
     "check-daily-notifications": {
        "task": "core.utils.notifications.check_budget_notifications",
        "schedule": crontab(hour=14, minute=35),  # Once daily at 
    },
    "generate-recurring-transactions": {
        "task": "core.tasks.generate_due_recurring_transactions_task",
        "schedule": crontab(hour=14, minute=35),
    },
    "fetch-usd-sos-exchange-rate": {
        "task": "core.tasks.fetch_exchange_rates",
        "schedule": crontab(hour=8, minute=0),
        "args": ("USD", ["SOS"]),
    },
    # "hourly-usd-sos-fixer-rate": {
    #     "task": "core.tasks.fetch_usd_sos_fixer_rate",
    #     "schedule": crontab(houminute=0),
    # },
}


# FRONTEND_URL = "http://localhost:5173/"# Ku dar URL-ka frontend-kaaga
# Email tijaabo (bilaash)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "xararavic1547@gmail.com"
EMAIL_HOST_PASSWORD = "oaounkaztlepdmnj"
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# EMAIL_BACKEND = env("EMAIL_BACKEND")
# EMAIL_HOST = env("EMAIL_HOST")
# EMAIL_PORT = env.int("EMAIL_PORT")
# EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS")
# EMAIL_HOST_USER = env("EMAIL_HOST_USER")
# EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
# DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL")


# File storage (S3 optional)
# USE_S3 = env.bool("USE_S3", default=False)
# if USE_S3:
#     INSTALLED_APPS += ["storages"]
#     AWS_ACCESS_KEY_ID = env("AWS_ACCESS_KEY_ID")
#     AWS_SECRET_ACCESS_KEY = env("AWS_SECRET_ACCESS_KEY")
#     AWS_STORAGE_BUCKET_NAME = env("AWS_STORAGE_BUCKET_NAME")
#     AWS_S3_REGION_NAME = env("AWS_S3_REGION_NAME", default=None)
#     DEFAULT_FILE_STORAGE = "core.storage.PublicS3Storage"

# # Currencies restriction (UI will show two, backend validates)
# ALLOWED_CURRENCIES = {"USD","SOS"}